basePath: /api
definitions:
  dto.LoginRequest:
    description: Login request payload
    properties:
      email:
        description: Username string `json:"username" binding:"required"`
        example: user@example.com
        type: string
      password:
        description: User password
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterRequest:
    description: User registration request payload
    properties:
      email:
        description: Email address
        example: aruncs31ss@gmail.com
        type: string
      github_username:
        description: GitHub username (optional)
        example: aruncs31s
        type: string
      name:
        description: Full name
        example: Arun CS
        type: string
      password:
        description: Password (minimum 6 characters)
        example: password123
        minLength: 6
        type: string
      status:
        description: Account status (active/inactive)
        type: string
      username:
        description: Username (optional)
        example: aruncs31s
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Authentication and authorization API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Auth Module API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: Login credentials
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user account
      parameters:
      - description: Registration data
        in: body
        name: registerData
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Registration successful
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: User registration
      tags:
      - auth
swagger: "2.0"
